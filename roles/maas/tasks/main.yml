- name: Create MAAS CNAME record
  community.general.cloudflare_dns:
    zone: xoh.systems
    record: "{{ maas_domain }}"
    type: CNAME
    value: "{{ ansible_product_serial | lower }}"
    api_token: "{{ secrets.cloudflare_token_dns_xoh_systems }}"
    state: present

- name: Disable systemd-timesyncd
  ansible.builtin.systemd:
    name: systemd-timesyncd
    state: stopped
    enabled: false

- name: Install MAAS via SNAP
  community.general.snap:
    name: maas
    channel: "{{ maas_version }}"
  register: maas_installed

- name: Check if MAAS is initialized
  lineinfile: 
    dest: "/var/snap/maas/current/regiond.conf"
    line: "database_pass: {{ db_user_password }}"
  check_mode: true
  register: initialized

- name: Initialize MAAS
  ansible.builtin.command:
    cmd: "maas init region+rack --database-uri \"postgres://{{ db_user_name }}:{{ db_user_password }}@localhost/{{ db_name }}\" --maas-url \"{{ maas_url }}\""
  when: initialized.changed

- name: Create MAAS admin
  ansible.builtin.command:
    cmd: "maas createadmin --username {{ maas_admin_name }} --password {{ maas_admin_password }} --email {{ maas_admin_mail }} --ssh-import {{ maas_admin_key }}"
  when: initialized.changed

- name: Query API key
  ansible.builtin.command:
    cmd: "maas apikey --username {{ maas_admin_name }}"
  register: maas_apikey

- name: Login to MAAS via API
  ansible.builtin.command:
    cmd: "maas login {{ maas_admin_name }} {{ maas_url }}/api/2.0/ {{ maas_apikey.stdout }}"
  register: login
  until: login is not failed
  retries: 5
  delay: 2

- name: Set MAAS upstream DNS
  ansible.builtin.command:
    cmd: "maas {{ maas_admin_name }} maas set-config name=upstream_dns value=\"{{ upstream_dns }}\""

- name: Set MAAS region name
  ansible.builtin.command:
    cmd: "maas {{ maas_admin_name }} maas set-config name=maas_name value=\"{{ maas_name }}\""

- name: Define MAAS images
  ansible.builtin.command:
    cmd: "maas {{ maas_admin_name }} boot-source-selections create 1 os='{{ item.os }}' release='{{ item.release }}' arches='{{ item.arches }}' subarches='{{ item.subarches }}' labels='{{ item.labels }}'"
  with_items: "{{ maas_images }}"
  register: maas_image_command
  failed_when:
    - maas_image_command.rc != 0
    - '"Boot source selection with this Boot source, Os and Release already exists" not in maas_image_command.stdout'

- name: Initiate image download
  ansible.builtin.command:
    cmd: "maas {{ maas_admin_name }} boot-resources import"

- name: Continue MAAS setup
  debug:
    msg: "Continue to {{ maas_url }} to finish the installation"